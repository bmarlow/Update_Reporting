---
# set datetime that process began (for use in report)
- name: "Get datetime prior to update"
  local_action: shell date +'%Y-%m-%dT%H:%M:%SZ'
  register: s_datetime

# perform update using underlying package manager
- name: "Perform update on all packages"
  package:
    name: '*'
    state: latest
  register: update_details

# set datetime that process ended (for use in report)
- name: "Get timestamp for end of update"
  local_action: shell date +'%Y-%m-%dT%H:%M:%SZ'
  register: e_datetime

# create a list of the pre-existing packages and versions that will be updated
- name: "Build list of old package versions"
  set_fact:
    old_packages: "{{ old_packages | default([]) + [item.split()[1]] }}"
  loop: "{{ update_details.results }}"
  when: item.split(':')[0] == "Removed"

# create a list of the new packages and versions
- name: "Build list of new package versions"
  set_fact:
    new_packages: "{{ new_packages | default([]) + [item.split()[1]] }}"
  loop: "{{ update_details.results  }}"
  when: item.split(':')[0] == "Installed"

# get the duration
- name: "Get duration of update process"
  set_fact:
    duration: "{{ e_datetime.stdout|to_datetime('%Y-%m-%dT%H:%M:%SZ') - s_datetime.stdout|to_datetime('%Y-%m-%dT%H:%M:%SZ') }}"

# store our jinja2 formatted report in a variable
- name: "Render update report"
  set_fact:
    update_report: "{{ lookup('template', 'update_report.j2') }}"

# print our update report
- name: "Print update report to file"
  template:
    src: "templates/update_report.j2"
    dest: /tmp/update_report.html
    mode: 0755
